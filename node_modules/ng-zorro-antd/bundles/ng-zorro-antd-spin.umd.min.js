!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("rxjs"),require("rxjs/operators"),require("ng-zorro-antd/core"),require("@angular/cdk/observers"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-zorro-antd/spin",["exports","@angular/core","rxjs","rxjs/operators","ng-zorro-antd/core","@angular/cdk/observers","@angular/common"],e):e(((n=n||self)["ng-zorro-antd"]=n["ng-zorro-antd"]||{},n["ng-zorro-antd"].spin={}),n.ng.core,n.rxjs,n.rxjs.operators,n["ng-zorro-antd"].core,n.ng.cdk.observers,n.ng.common)}(this,(function(n,e,t,i,o,s,r){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function a(n,e,t,i){var o,s=arguments.length,r=s<3?e:null===i?i=Object.getOwnPropertyDescriptor(e,t):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(n,e,t,i);else for(var a=n.length-1;a>=0;a--)(o=n[a])&&(r=(s<3?o(r):s>3?o(e,t,r):o(e,t))||r);return s>3&&r&&Object.defineProperty(e,t,r),r}function p(n,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)}var c=function(){function n(n,e){this.nzConfigService=n,this.cdr=e,this.nzSize="default",this.nzDelay=0,this.nzSimple=!1,this.nzSpinning=!0,this.loading=!0,this.destroy$=new t.Subject,this.spinning$=new t.BehaviorSubject(this.nzSpinning),this.loading$=this.spinning$.pipe(i.debounceTime(this.nzDelay))}return n.prototype.subscribeLoading=function(){var n=this;this.unsubscribeLoading(),this.loading_=this.loading$.subscribe((function(e){n.loading=e,n.cdr.markForCheck()}))},n.prototype.unsubscribeLoading=function(){this.loading_&&(this.loading_.unsubscribe(),this.loading_=null)},n.prototype.ngOnInit=function(){var n=this;this.subscribeLoading(),this.nzConfigService.getConfigChangeEventForComponent("spin").pipe(i.takeUntil(this.destroy$)).subscribe((function(){return n.cdr.markForCheck()}))},n.prototype.ngOnChanges=function(n){n.nzSpinning&&(n.nzSpinning.isFirstChange()&&(this.loading=this.nzSpinning),this.spinning$.next(this.nzSpinning)),n.nzDelay&&(this.loading$=this.spinning$.pipe(i.debounceTime(this.nzDelay)),this.subscribeLoading())},n.prototype.ngOnDestroy=function(){this.destroy$.next(),this.destroy$.complete(),this.unsubscribeLoading()},n.decorators=[{type:e.Component,args:[{selector:"nz-spin",exportAs:"nzSpin",preserveWhitespaces:!1,encapsulation:e.ViewEncapsulation.None,changeDetection:e.ChangeDetectionStrategy.OnPush,template:'<ng-template #defaultIndicatorTemplate>\n  <span class="ant-spin-dot" [class.ant-spin-dot-spin]="loading">\n    <i class="ant-spin-dot-item"></i><i class="ant-spin-dot-item"></i><i class="ant-spin-dot-item"></i><i class="ant-spin-dot-item"></i>\n  </span>\n</ng-template>\n<div *ngIf="loading">\n  <div class="ant-spin"\n    [class.ant-spin-spinning]="loading"\n    [class.ant-spin-lg]="nzSize === \'large\'"\n    [class.ant-spin-sm]="nzSize === \'small\'"\n    [class.ant-spin-show-text]="nzTip">\n    <ng-template [ngTemplateOutlet]="nzIndicator || defaultIndicatorTemplate"></ng-template>\n    <div class="ant-spin-text" *ngIf="nzTip">{{ nzTip }}</div>\n  </div>\n</div>\n<div *ngIf="!nzSimple"\n  class="ant-spin-container"\n  [class.ant-spin-blur]="loading">\n  <ng-content></ng-content>\n</div>\n',host:{"[class.ant-spin-nested-loading]":"!nzSimple"},styles:["\n      nz-spin {\n        display: block;\n      }\n    "]}]}],n.ctorParameters=function(){return[{type:o.NzConfigService},{type:e.ChangeDetectorRef}]},n.propDecorators={nzIndicator:[{type:e.Input}],nzSize:[{type:e.Input}],nzTip:[{type:e.Input}],nzDelay:[{type:e.Input}],nzSimple:[{type:e.Input}],nzSpinning:[{type:e.Input}]},a([o.WithConfig("spin"),p("design:type",e.TemplateRef)],n.prototype,"nzIndicator",void 0),a([o.InputNumber(),p("design:type",Object)],n.prototype,"nzDelay",void 0),a([o.InputBoolean(),p("design:type",Object)],n.prototype,"nzSimple",void 0),a([o.InputBoolean(),p("design:type",Object)],n.prototype,"nzSpinning",void 0),n}();var l=function(){function n(){}return n.decorators=[{type:e.NgModule,args:[{exports:[c],declarations:[c],imports:[r.CommonModule,s.ObserversModule]}]}],n}();n.NzSpinComponent=c,n.NzSpinModule=l,Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-zorro-antd-spin.umd.min.js.map