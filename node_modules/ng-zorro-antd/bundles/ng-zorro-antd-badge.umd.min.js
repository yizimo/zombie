!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/cdk/observers"),require("@angular/core"),require("ng-zorro-antd/core"),require("rxjs"),require("rxjs/operators"),require("@angular/common")):"function"==typeof define&&define.amd?define("ng-zorro-antd/badge",["exports","@angular/cdk/observers","@angular/core","ng-zorro-antd/core","rxjs","rxjs/operators","@angular/common"],e):e(((t=t||self)["ng-zorro-antd"]=t["ng-zorro-antd"]||{},t["ng-zorro-antd"].badge={}),t.ng.cdk.observers,t.ng.core,t["ng-zorro-antd"].core,t.rxjs,t.rxjs.operators,t.ng.common)}(this,(function(t,e,n,o,r,a,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function i(t,e,n,o){var r,a=arguments.length,s=a<3?e:null===o?o=Object.getOwnPropertyDescriptor(e,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(t,e,n,o);else for(var i=t.length-1;i>=0;i--)(r=t[i])&&(s=(a<3?r(s):a>3?r(e,n,s):r(e,n))||s);return a>3&&s&&Object.defineProperty(e,n,s),s}function p(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var u=function(){function t(t,e,n,o,a,s){this.nzConfigService=t,this.renderer=e,this.elementRef=n,this.contentObserver=o,this.cdr=a,this.ngZone=s,this.destroy$=new r.Subject,this.notWrapper=!0,this.viewInit=!1,this.maxNumberArray=[],this.countArray=[],this.countSingleArray=[0,1,2,3,4,5,6,7,8,9],this.colorArray=["pink","red","yellow","orange","cyan","green","blue","purple","geekblue","magenta","volcano","gold","lime"],this.presetColor=null,this.nzShowZero=!1,this.nzShowDot=!0,this.nzDot=!1,e.addClass(n.nativeElement,"ant-badge")}return t.prototype.checkContent=function(){this.notWrapper=o.isEmpty(this.contentElement.nativeElement),this.notWrapper?this.renderer.addClass(this.elementRef.nativeElement,"ant-badge-not-a-wrapper"):this.renderer.removeClass(this.elementRef.nativeElement,"ant-badge-not-a-wrapper")},Object.defineProperty(t.prototype,"showSup",{get:function(){return this.nzShowDot&&this.nzDot||this.count>0||0===this.count&&this.nzShowZero},enumerable:!0,configurable:!0}),t.prototype.generateMaxNumberArray=function(){this.maxNumberArray=this.nzOverflowCount.toString().split("")},t.prototype.ngOnInit=function(){this.generateMaxNumberArray()},t.prototype.ngAfterViewInit=function(){var t=this;this.ngZone.onStable.pipe(a.take(1)).subscribe((function(){t.viewInit=!0,t.cdr.markForCheck()})),this.contentObserver.observe(this.contentElement).pipe(a.startWith(!0),a.takeUntil(this.destroy$)).subscribe((function(){t.checkContent()}))},t.prototype.ngOnChanges=function(t){var e=t.nzOverflowCount,o=t.nzCount,r=t.nzColor;!o||o.currentValue instanceof n.TemplateRef||(this.count=Math.max(0,o.currentValue),this.countArray=this.count.toString().split("").map((function(t){return+t}))),e&&this.generateMaxNumberArray(),r&&(this.presetColor=-1!==this.colorArray.indexOf(this.nzColor)?this.nzColor:null)},t.prototype.ngOnDestroy=function(){this.destroy$.next(),this.destroy$.complete()},t.decorators=[{type:n.Component,args:[{selector:"nz-badge",exportAs:"nzBadge",preserveWhitespaces:!1,encapsulation:n.ViewEncapsulation.None,changeDetection:n.ChangeDetectionStrategy.OnPush,animations:[o.zoomBadgeMotion],template:'<span #contentElement><ng-content></ng-content></span>\n<span class="ant-badge-status-dot ant-badge-status-{{nzStatus || presetColor}}"\n      [style.background]="!presetColor && nzColor"\n      *ngIf="nzStatus || nzColor"\n      [ngStyle]="nzStyle"></span>\n<span class="ant-badge-status-text" *ngIf="nzStatus || nzColor">{{ nzText }}</span>\n<ng-container *nzStringTemplateOutlet="nzCount">\n  <sup class="ant-scroll-number"\n       *ngIf="showSup && viewInit"\n       [@.disabled]="notWrapper"\n       [@zoomBadgeMotion]\n       [ngStyle]="nzStyle"\n       [attr.title]="nzTitle || nzCount"\n       [style.right.px]="nzOffset && nzOffset[0] ? -nzOffset[0] : null"\n       [style.marginTop.px]="nzOffset && nzOffset[1] ? nzOffset[1] : null"\n       [class.ant-badge-count]="!nzDot"\n       [class.ant-badge-dot]="nzDot"\n       [class.ant-badge-multiple-words]="countArray.length>=2">\n    <ng-container *ngFor="let n of maxNumberArray;let i = index;">\n      <span class="ant-scroll-number-only"\n            *ngIf="count <= nzOverflowCount"\n            [style.transform]="\'translateY(\' + (-countArray[i] * 100) + \'%)\'">\n          <ng-container *ngIf="!nzDot && countArray[i] !== undefined">\n            <p *ngFor="let p of countSingleArray" [class.current]="p === countArray[i]">{{ p }}</p>\n          </ng-container>\n      </span>\n    </ng-container>\n    <ng-container *ngIf="count > nzOverflowCount">{{ nzOverflowCount }}+</ng-container>\n  </sup>\n</ng-container>',host:{"[class.ant-badge-status]":"nzStatus"}}]}],t.ctorParameters=function(){return[{type:o.NzConfigService},{type:n.Renderer2},{type:n.ElementRef},{type:e.ContentObserver},{type:n.ChangeDetectorRef},{type:n.NgZone}]},t.propDecorators={contentElement:[{type:n.ViewChild,args:["contentElement",{static:!1}]}],nzShowZero:[{type:n.Input}],nzShowDot:[{type:n.Input}],nzDot:[{type:n.Input}],nzOverflowCount:[{type:n.Input}],nzText:[{type:n.Input}],nzColor:[{type:n.Input}],nzTitle:[{type:n.Input}],nzStyle:[{type:n.Input}],nzStatus:[{type:n.Input}],nzCount:[{type:n.Input}],nzOffset:[{type:n.Input}]},i([o.InputBoolean(),p("design:type",Boolean)],t.prototype,"nzShowZero",void 0),i([o.InputBoolean(),p("design:type",Object)],t.prototype,"nzShowDot",void 0),i([o.InputBoolean(),p("design:type",Object)],t.prototype,"nzDot",void 0),i([o.WithConfig("backTop",99),p("design:type",Number)],t.prototype,"nzOverflowCount",void 0),i([o.WithConfig("backTop"),p("design:type",String)],t.prototype,"nzColor",void 0),t}();var l=function(){function t(){}return t.decorators=[{type:n.NgModule,args:[{declarations:[u],exports:[u],imports:[s.CommonModule,e.ObserversModule,o.NzAddOnModule]}]}],t}();t.NzBadgeComponent=u,t.NzBadgeModule=l,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=ng-zorro-antd-badge.umd.min.js.map