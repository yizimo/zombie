{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ng-zorro-antd/modal/nz-modal-config.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.module.ts","ng://ng-zorro-antd/modal/nz-modal-control.service.ts","ng://ng-zorro-antd/modal/nz-modal-ref.class.ts","ng://ng-zorro-antd/modal/nz-modal-footer.directive.ts","ng://ng-zorro-antd/modal/nz-modal.component.ts","ng://ng-zorro-antd/modal/nz-modal.service.module.ts","ng://ng-zorro-antd/modal/nz-modal.module.ts","ng://ng-zorro-antd/modal/nz-modal.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","NZ_MODAL_CONFIG","InjectionToken","NzModalControlServiceModule","NgModule","NzModalControlService","parentService","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","deregisterModal","registeredMeta","get","unsubscribe","delete","has","closeAll","close","index","indexOf","splice","next","Injectable","args","providedIn","type","Optional","SkipSelf","NzModalFooterDirective","nzModalRef","templateRef","getInstance","setFooterWithTemplate","Directive","selector","exportAs","NzModalRef","TemplateRef","NzModalComponent","_super","nzConfigService","overlay","overlayKeyboardDispatcher","i18n","cfr","elementRef","viewContainer","modalControl","focusTrapFactory","cdr","nzModalGlobalConfig","document","nzVisible","nzClosable","nzOkLoading","nzOkDisabled","nzCancelDisabled","nzCancelLoading","nzKeyboard","nzNoAnimation","nzGetContainer","create","nzZIndex","nzWidth","nzCloseIcon","nzOkType","nzIconType","nzModalType","nzOnOk","EventEmitter","nzOnCancel","nzAfterOpen","nzAfterClose","nzVisibleChange","locale","transformOrigin","unsubscribe$","dialogMouseDown","scrollStrategy","scrollStrategies","block","warnDeprecation","__","constructor","tslib_1.__extends","value","asObservable","nzCancelText","nzOkText","animationState","nzMask","nzMaskClosable","ngOnInit","localeChange","pipe","takeUntil","getLocaleData","isComponent","nzContent","createDynamicComponent","isModalButtons","nzFooter","formatModalButtons","container","HTMLElement","appendChild","nativeElement","fromEvent","body","e","keydownListener","OverlayRef","setOverlayRef","overlayElement","overlayRef","keydownEvents","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","autoFocusButtonOk","focus","ngOnDestroy","changeVisibleFromInside","then","dispose","complete","clearTimeout","timeoutId","markForCheck","event","keyCode","ESCAPE","onClickOkCancel","open","result","destroy","triggerOk","triggerCancel","getContentComponentRef","getContentComponent","instance","getElement","onMaskDialogDown","onDialogUp","setTimeout","onClickMask","$event","mask","maskClosable","classList","contains","isModalType","onClickCloseBtn","trigger","ok","cancel","loadingKey","emit","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","isArray","visible","animation","closeResult","enable","savePreviouslyFocusedElement","trapFocus","add","remove","Promise","resolve","animateTo","undefined","restoreFocus","disable","getButtonCallableProp","options","prop","onButtonClick","button","loading","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","map","size","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","useValue","parent","parentInjector","nzComponentParams","changeDetectorRef","detectChanges","modalElement","modalContainer","previouslyFocusedElement","previouslyDOMRect","getBoundingClientRect","lastPosition","getElementOffset","x","left","width","y","top","height","offsetLeft","offsetTop","focusTrap","focusInitialElementWhenReady","Component","template","changeDetection","ChangeDetectionStrategy","Default","NzConfigService","Overlay","OverlayKeyboardDispatcher","NzI18nService","ComponentFactoryResolver","ElementRef","ViewContainerRef","FocusTrapFactory","ChangeDetectorRef","Inject","DOCUMENT","Input","Output","ViewChild","static","read","ContentChild","tslib_1.__decorate","InputBoolean","WithConfig","NzModalServiceModule","NzModalModule","imports","CommonModule","OverlayModule","NzAddOnModule","NzI18nModule","NzButtonModule","NzIconModule","NzPipesModule","NzNoAnimationModule","exports","declarations","entryComponents","ModalBuilderForService","createModal","changeProps","destroyModal","attach","ComponentPortal","NzModalService","confirm","confirmType","warn","nzClassName","info","simpleConfirm","success","error","warning"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport interface NzModalConfig {\n  nzMask?: boolean;\n  nzMaskClosable?: boolean;\n}\nexport const NZ_MODAL_CONFIG = new InjectionToken<NzModalConfig>('NZ_MODAL_CONFIG');\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzModalControlServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\nimport { NzModalRef } from './nz-modal-ref.class';\n\ninterface RegisteredMeta {\n  modalRef: NzModalRef;\n  afterOpenSubscription: Subscription;\n  afterCloseSubscription: Subscription;\n}\n\n@Injectable({\n  providedIn: NzModalControlServiceModule\n})\nexport class NzModalControlService {\n  // Track singleton afterAllClose through over the injection tree\n  get afterAllClose(): Subject<void> {\n    return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n  }\n\n  // Track singleton openModals array through over the injection tree\n  get openModals(): NzModalRef[] {\n    return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n  }\n\n  private rootOpenModals: NzModalRef[] | null = this.parentService ? null : [];\n  private rootAfterAllClose: Subject<void> | null = this.parentService ? null : new Subject<void>();\n  private rootRegisteredMetaMap: Map<NzModalRef, RegisteredMeta> | null = this.parentService ? null : new Map();\n\n  private get registeredMetaMap(): Map<NzModalRef, RegisteredMeta> {\n    // Registered modal for later usage\n    return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap!;\n  }\n\n  constructor(@Optional() @SkipSelf() private parentService: NzModalControlService) {}\n\n  // Register a modal to listen its open/close\n  registerModal(modalRef: NzModalRef): void {\n    if (!this.hasRegistered(modalRef)) {\n      const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n      const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n      this.registeredMetaMap.set(modalRef, { modalRef, afterOpenSubscription, afterCloseSubscription });\n    }\n  }\n\n  // deregister modals\n  deregisterModal(modalRef: NzModalRef): void {\n    const registeredMeta = this.registeredMetaMap.get(modalRef);\n    if (registeredMeta) {\n      // Remove this modal if it is still in the opened modal list (NOTE: it may trigger \"afterAllClose\")\n      this.removeOpenModal(registeredMeta.modalRef);\n      registeredMeta.afterOpenSubscription.unsubscribe();\n      registeredMeta.afterCloseSubscription.unsubscribe();\n      this.registeredMetaMap.delete(modalRef);\n    }\n  }\n\n  hasRegistered(modalRef: NzModalRef): boolean {\n    return this.registeredMetaMap.has(modalRef);\n  }\n\n  // Close all registered opened modals\n  closeAll(): void {\n    let i = this.openModals.length;\n\n    while (i--) {\n      this.openModals[i].close();\n    }\n  }\n\n  private removeOpenModal(modalRef: NzModalRef): void {\n    const index = this.openModals.indexOf(modalRef);\n\n    if (index > -1) {\n      this.openModals.splice(index, 1);\n\n      if (!this.openModals.length) {\n        this.afterAllClose.next();\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Observable } from 'rxjs';\n\nimport { NzModalComponent } from './nz-modal.component';\n\n/**\n * API class that public to users to handle the modal instance.\n * NzModalRef is aim to avoid accessing to the modal instance directly by users.\n */\n// tslint:disable-next-line:no-any\nexport abstract class NzModalRef<T = any, R = any> {\n  abstract afterOpen: Observable<void>;\n  abstract afterClose: Observable<R>;\n\n  abstract open(): void;\n  abstract close(result?: R): void;\n  abstract destroy(result?: R): void;\n\n  /**\n   * Trigger the nzOnOk/nzOnCancel by manual\n   */\n  abstract triggerOk(): void;\n  abstract triggerCancel(): void;\n\n  // /**\n  //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n  //  * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n  //  */\n  // abstract getContentComponentRef(): ComponentRef<{}>;\n\n  /**\n   * Return the component instance of nzContent when specify nzContent as a Component\n   * Note: this method may return undefined if the Component has not ready yet. (it only available after Modal's ngOnInit)\n   */\n  abstract getContentComponent(): T;\n\n  /**\n   * Get the dom element of this Modal\n   */\n  abstract getElement(): HTMLElement;\n\n  /**\n   * Get the instance of the Modal itself\n   */\n  abstract getInstance(): NzModalComponent;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, Optional, TemplateRef } from '@angular/core';\nimport { NzModalRef } from './nz-modal-ref.class';\n\n@Directive({\n  selector: '[nzModalFooter]',\n  exportAs: 'nzModalFooter'\n})\nexport class NzModalFooterDirective {\n  constructor(@Optional() private nzModalRef: NzModalRef, public templateRef: TemplateRef<{}>) {\n    if (this.nzModalRef) {\n      this.nzModalRef.getInstance().setFooterWithTemplate(this.templateRef);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { FocusTrap, FocusTrapFactory } from '@angular/cdk/a11y';\n\nimport { ESCAPE } from '@angular/cdk/keycodes';\nimport { BlockScrollStrategy, Overlay, OverlayKeyboardDispatcher, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { fromEvent, Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport {\n  getElementOffset,\n  isPromise,\n  warnDeprecation,\n  InputBoolean,\n  NzConfigService,\n  WithConfig\n} from 'ng-zorro-antd/core';\nimport { NzI18nService } from 'ng-zorro-antd/i18n';\n\nimport { NzModalConfig, NZ_MODAL_CONFIG } from './nz-modal-config';\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { ModalButtonOptions, ModalOptions, ModalType, OnClickCallback } from './nz-modal.type';\n\nexport const MODAL_ANIMATE_DURATION = 200; // Duration when perform animations (ms)\nexport const WRAP_CLASS_NAME = 'ant-modal-wrap';\n\ntype AnimationState = 'enter' | 'leave' | null;\n\nconst NZ_CONFIG_COMPONENT_NAME = 'modal';\n\n@Component({\n  selector: 'nz-modal',\n  exportAs: 'nzModal',\n  templateUrl: './nz-modal.component.html',\n  // Using OnPush for modal caused footer can not to detect changes. we can fix it when 8.x.\n  changeDetection: ChangeDetectionStrategy.Default\n})\n\n// tslint:disable-next-line:no-any\nexport class NzModalComponent<T = any, R = any> extends NzModalRef<T, R>\n  implements OnInit, OnChanges, AfterViewInit, OnDestroy, ModalOptions<T> {\n  @Input() @InputBoolean() nzVisible: boolean = false;\n  @Input() @InputBoolean() nzClosable: boolean = true;\n  @Input() @InputBoolean() nzOkLoading: boolean = false;\n  @Input() @InputBoolean() nzOkDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelDisabled: boolean = false;\n  @Input() @InputBoolean() nzCancelLoading: boolean = false;\n  @Input() @InputBoolean() nzKeyboard: boolean = true;\n  @Input() @InputBoolean() nzNoAnimation = false;\n\n  // TODO(hsuanxyz): add default value once old API is deprecated.\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMask: boolean;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME) @InputBoolean() nzMaskClosable: boolean;\n\n  @Input() nzContent: string | TemplateRef<{}> | Type<T>; // [STATIC] If not specified, will use <ng-content>\n  @Input() nzComponentParams: T; // [STATIC] ONLY avaliable when nzContent is a component\n  @Input() nzFooter: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null; // [STATIC] Default Modal ONLY\n  @Input() nzGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create(); // [STATIC]\n  @Input() nzZIndex: number = 1000;\n  @Input() nzWidth: number | string = 520;\n  @Input() nzWrapClassName: string;\n  @Input() nzClassName: string;\n  @Input() nzStyle: object;\n  @Input() nzTitle: string | TemplateRef<{}>;\n  @Input() nzCloseIcon: string | TemplateRef<void> = 'close';\n  @Input() nzMaskStyle: object;\n  @Input() nzBodyStyle: object;\n  @Input() nzOkText: string | null;\n  @Input() nzCancelText: string | null;\n  @Input() nzOkType: string = 'primary';\n  @Input() nzIconType: string = 'question-circle'; // Confirm Modal ONLY\n  @Input() nzModalType: ModalType = 'default';\n\n  @Input() @Output() readonly nzOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n  @Input() @Output() readonly nzOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n  @Output() readonly nzAfterOpen = new EventEmitter<void>(); // Trigger when modal open(visible) after animations\n  @Output() readonly nzAfterClose = new EventEmitter<R>(); // Trigger when modal leave-animation over\n  @Output() readonly nzVisibleChange = new EventEmitter<boolean>();\n\n  @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n  @ViewChild('bodyContainer', { static: false, read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n  @ViewChild('autoFocusButtonOk', { static: false, read: ElementRef }) autoFocusButtonOk: ElementRef; // Only aim to focus the ok button that needs to be auto focused\n\n  @ContentChild(NzModalFooterDirective, { static: false })\n  set modalFooter(value: NzModalFooterDirective) {\n    if (value && value.templateRef) {\n      this.setFooterWithTemplate(value.templateRef);\n    }\n  }\n\n  get afterOpen(): Observable<void> {\n    // Observable alias for nzAfterOpen\n    return this.nzAfterOpen.asObservable();\n  }\n\n  get afterClose(): Observable<R> {\n    // Observable alias for nzAfterClose\n    return this.nzAfterClose.asObservable();\n  }\n\n  get cancelText(): string {\n    return this.nzCancelText || this.locale.cancelText!;\n  }\n\n  get okText(): string {\n    return this.nzOkText || this.locale.okText!;\n  }\n\n  get hidden(): boolean {\n    return !this.nzVisible && !this.animationState;\n  } // Indicate whether this dialog should hidden\n\n  /**\n   * @description\n   * The calculated highest weight of mask value\n   *\n   * Weight of different mask input:\n   * component default value < global configuration < component input value\n   */\n  get mask(): boolean {\n    if (this.nzMask != null) {\n      return this.nzMask;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMask != null) {\n      return this.nzModalGlobalConfig.nzMask;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @description\n   * The calculated highest weight of maskClosable value\n   *\n   * Weight of different maskClosable input:\n   * component default value < global configuration < component input value\n   */\n  get maskClosable(): boolean {\n    if (this.nzMaskClosable != null) {\n      return this.nzMaskClosable;\n    } else if (this.nzModalGlobalConfig && this.nzModalGlobalConfig.nzMaskClosable != null) {\n      return this.nzModalGlobalConfig.nzMaskClosable;\n    } else {\n      return true;\n    }\n  }\n\n  locale: { okText?: string; cancelText?: string } = {};\n  maskAnimationClassMap: object | null;\n  modalAnimationClassMap: object | null;\n  transformOrigin = '0px 0px 0px'; // The origin point that animation based on\n\n  private contentComponentRef: ComponentRef<T>; // Handle the reference when using nzContent as Component\n  private animationState: AnimationState; // Current animation state\n  private container: HTMLElement | OverlayRef;\n  private unsubscribe$ = new Subject<void>();\n  private previouslyFocusedElement: HTMLElement;\n  private focusTrap: FocusTrap;\n  private scrollStrategy: BlockScrollStrategy;\n  private overlayRef: OverlayRef;\n  private dialogMouseDown = false;\n  private timeoutId: number;\n\n  [key: string]: any; // tslint:disable-line:no-any\n\n  constructor(\n    public nzConfigService: NzConfigService,\n    private overlay: Overlay,\n    private overlayKeyboardDispatcher: OverlayKeyboardDispatcher,\n    private i18n: NzI18nService,\n    private cfr: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n    private viewContainer: ViewContainerRef,\n    private modalControl: NzModalControlService,\n    private focusTrapFactory: FocusTrapFactory,\n    private cdr: ChangeDetectorRef,\n    @Optional() @Inject(NZ_MODAL_CONFIG) private nzModalGlobalConfig: NzModalConfig,\n    @Inject(DOCUMENT) private document: any // tslint:disable-line:no-any\n  ) {\n    super();\n    this.scrollStrategy = this.overlay.scrollStrategies.block();\n\n    if (this.nzModalGlobalConfig) {\n      warnDeprecation(\n        '`NZ_MODAL_CONFIG` has been deprecated and will be removed in 9.0.0. Please use global config instead.'\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    this.i18n.localeChange.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      this.locale = this.i18n.getLocaleData('Modal');\n    });\n\n    if (this.isComponent(this.nzContent)) {\n      this.createDynamicComponent(this.nzContent as Type<T>); // Create component along without View\n    }\n\n    if (this.isModalButtons(this.nzFooter)) {\n      // Setup default button options\n      this.nzFooter = this.formatModalButtons(this.nzFooter as Array<ModalButtonOptions<T>>);\n    }\n\n    // Place the modal dom to elsewhere\n    this.container = typeof this.nzGetContainer === 'function' ? this.nzGetContainer() : this.nzGetContainer;\n    if (this.container instanceof HTMLElement) {\n      this.container.appendChild(this.elementRef.nativeElement);\n      fromEvent<KeyboardEvent>(this.document.body, 'keydown')\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    } else if (this.container instanceof OverlayRef) {\n      // NOTE: only attach the dom to overlay, the view container is not changed actually\n      this.setOverlayRef(this.container);\n      this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n    }\n\n    if (this.overlayRef) {\n      this.overlayRef\n        .keydownEvents()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(e => this.keydownListener(e));\n    }\n\n    // Register modal when afterOpen/afterClose is stable\n    this.modalControl.registerModal(this);\n  }\n\n  // [NOTE] NOT available when using by service!\n  // Because ngOnChanges never be called when using by service,\n  // here we can't support \"nzContent\"(Component) etc. as inputs that initialized dynamically.\n  // BUT: User also can change \"nzContent\" dynamically to trigger UI changes (provided you don't use \bComponent that needs initializations)\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzVisible) {\n      this.handleVisibleStateChange(this.nzVisible, !changes.nzVisible.firstChange); // Do not trigger animation while initializing\n    }\n  }\n\n  ngAfterViewInit(): void {\n    // If using Component, it is the time to attach View while bodyContainer is ready\n    if (this.contentComponentRef) {\n      this.bodyContainer.insert(this.contentComponentRef.hostView);\n    }\n\n    if (this.autoFocusButtonOk) {\n      (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n    }\n  }\n\n  ngOnDestroy(): void {\n    // Close self before destructing\n    this.changeVisibleFromInside(false).then(() => {\n      this.modalControl.deregisterModal(this);\n\n      if (this.container instanceof OverlayRef) {\n        this.container.dispose();\n      }\n\n      this.unsubscribe$.next();\n      this.unsubscribe$.complete();\n    });\n    clearTimeout(this.timeoutId);\n  }\n\n  setFooterWithTemplate(templateRef: TemplateRef<{}>): void {\n    this.nzFooter = templateRef;\n    this.cdr.markForCheck();\n  }\n\n  setOverlayRef(overlayRef: OverlayRef): void {\n    this.overlayRef = overlayRef;\n  }\n\n  keydownListener(event: KeyboardEvent): void {\n    if (event.keyCode === ESCAPE && this.nzKeyboard) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  open(): void {\n    this.changeVisibleFromInside(true);\n  }\n\n  close(result?: R): void {\n    this.changeVisibleFromInside(false, result);\n  }\n\n  destroy(result?: R): void {\n    // Destroy equals Close\n    this.close(result);\n  }\n\n  triggerOk(): void {\n    this.onClickOkCancel('ok');\n  }\n\n  triggerCancel(): void {\n    this.onClickOkCancel('cancel');\n  }\n\n  getInstance(): NzModalComponent {\n    return this;\n  }\n\n  getContentComponentRef(): ComponentRef<T> {\n    return this.contentComponentRef;\n  }\n\n  getContentComponent(): T {\n    return this.contentComponentRef && this.contentComponentRef.instance;\n  }\n\n  getElement(): HTMLElement {\n    return this.elementRef && this.elementRef.nativeElement;\n  }\n\n  onMaskDialogDown(): void {\n    this.dialogMouseDown = true;\n  }\n\n  onDialogUp(): void {\n    if (this.dialogMouseDown) {\n      this.timeoutId = setTimeout(() => {\n        this.dialogMouseDown = false;\n      }, 0);\n    }\n  }\n\n  onClickMask($event: MouseEvent): void {\n    if (\n      this.mask &&\n      this.maskClosable &&\n      ($event.target as HTMLElement).classList.contains(WRAP_CLASS_NAME) &&\n      this.nzVisible &&\n      !this.dialogMouseDown\n    ) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  isModalType(type: ModalType): boolean {\n    return this.nzModalType === type;\n  }\n\n  public onClickCloseBtn(): void {\n    if (this.nzVisible) {\n      this.onClickOkCancel('cancel');\n    }\n  }\n\n  public onClickOkCancel(type: 'ok' | 'cancel'): void {\n    const trigger = { ok: this.nzOnOk, cancel: this.nzOnCancel }[type];\n    const loadingKey = { ok: 'nzOkLoading', cancel: 'nzCancelLoading' }[type];\n    if (trigger instanceof EventEmitter) {\n      trigger.emit(this.getContentComponent());\n    } else if (typeof trigger === 'function') {\n      const result = trigger(this.getContentComponent());\n      const caseClose = (doClose: boolean | void | {}) => doClose !== false && this.close(doClose as R); // Users can return \"false\" to prevent closing by default\n      if (isPromise(result)) {\n        this[loadingKey] = true;\n        const handleThen = (doClose: boolean | void | {}) => {\n          this[loadingKey] = false;\n          caseClose(doClose);\n        };\n        (result as Promise<void>).then(handleThen).catch(handleThen);\n      } else {\n        caseClose(result);\n      }\n    }\n  }\n\n  public isNonEmptyString(value: {}): boolean {\n    return typeof value === 'string' && value !== '';\n  }\n\n  public isTemplateRef(value: {}): boolean {\n    return value instanceof TemplateRef;\n  }\n\n  public isComponent(value: {}): boolean {\n    return value instanceof Type;\n  }\n\n  public isModalButtons(value: string | TemplateRef<{}> | Array<ModalButtonOptions<T>> | null): boolean {\n    return Array.isArray(value) && value.length > 0;\n  }\n\n  // Do rest things when visible state changed\n  private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<void> {\n    if (visible) {\n      // Hide scrollbar at the first time when shown up\n      this.scrollStrategy.enable();\n      this.savePreviouslyFocusedElement();\n      this.trapFocus();\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.add(this.overlayRef);\n      }\n    } else {\n      if (this.container instanceof OverlayRef) {\n        this.overlayKeyboardDispatcher.remove(this.overlayRef);\n      }\n    }\n\n    return Promise.resolve(animation ? this.animateTo(visible) : undefined).then(() => {\n      // Emit open/close event after animations over\n      if (visible) {\n        this.nzAfterOpen.emit();\n      } else {\n        this.nzAfterClose.emit(closeResult);\n        this.restoreFocus();\n        this.scrollStrategy.disable();\n        // Mark the for check so it can react if the view container is using OnPush change detection.\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n  public getButtonCallableProp(options: ModalButtonOptions<T>, prop: string): {} {\n    const value = options[prop];\n    const args: T[] = [];\n    if (this.contentComponentRef) {\n      args.push(this.contentComponentRef.instance);\n    }\n    return typeof value === 'function' ? value.apply(options, args) : value;\n  }\n\n  // On nzFooter's modal button click\n  public onButtonClick(button: ModalButtonOptions<T>): void {\n    const result = this.getButtonCallableProp(button, 'onClick'); // Call onClick directly\n    if (isPromise(result)) {\n      button.loading = true;\n      (result as Promise<{}>).then(() => (button.loading = false)).catch(() => (button.loading = false));\n    }\n  }\n\n  // Change nzVisible from inside\n  private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n    if (this.nzVisible !== visible) {\n      // Change nzVisible value immediately\n      this.nzVisible = visible;\n      this.nzVisibleChange.emit(visible);\n      return this.handleVisibleStateChange(visible, true, closeResult);\n    }\n    return Promise.resolve();\n  }\n\n  private changeAnimationState(state: AnimationState): void {\n    this.animationState = state;\n    if (state) {\n      this.maskAnimationClassMap = {\n        [`fade-${state}`]: true,\n        [`fade-${state}-active`]: true\n      };\n      this.modalAnimationClassMap = {\n        [`zoom-${state}`]: true,\n        [`zoom-${state}-active`]: true\n      };\n    } else {\n      this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n    }\n  }\n\n  private animateTo(isVisible: boolean): Promise<void> {\n    if (isVisible) {\n      // Figure out the lastest click position when shows up\n      setTimeout(() => this.updateTransformOrigin()); // [NOTE] Using timeout due to the document.click event is fired later than visible change, so if not postponed to next event-loop, we can't get the lastest click position\n    }\n\n    this.changeAnimationState(isVisible ? 'enter' : 'leave');\n    return new Promise(resolve =>\n      setTimeout(\n        () => {\n          // Return when animation is over\n          this.changeAnimationState(null);\n          resolve();\n        },\n        this.nzNoAnimation ? 0 : MODAL_ANIMATE_DURATION\n      )\n    );\n  }\n\n  private formatModalButtons(buttons: Array<ModalButtonOptions<T>>): Array<ModalButtonOptions<T>> {\n    return buttons.map(button => {\n      return {\n        ...{\n          type: 'default',\n          size: 'default',\n          autoLoading: true,\n          show: true,\n          loading: false,\n          disabled: false\n        },\n        ...button\n      };\n    });\n  }\n\n  /**\n   * Create a component dynamically but not attach to any View (this action will be executed when bodyContainer is ready)\n   * @param component Component class\n   */\n  private createDynamicComponent(component: Type<T>): void {\n    const factory = this.cfr.resolveComponentFactory(component);\n    const childInjector = Injector.create({\n      providers: [{ provide: NzModalRef, useValue: this }],\n      parent: this.viewContainer.parentInjector\n    });\n    this.contentComponentRef = factory.create(childInjector);\n    if (this.nzComponentParams) {\n      Object.assign(this.contentComponentRef.instance, this.nzComponentParams);\n    }\n    // Do the first change detection immediately (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n    this.contentComponentRef.changeDetectorRef.detectChanges();\n  }\n\n  // Update transform-origin to the last click position on document\n  private updateTransformOrigin(): void {\n    const modalElement = this.modalContainer.nativeElement as HTMLElement;\n    if (this.previouslyFocusedElement) {\n      const previouslyDOMRect = this.previouslyFocusedElement.getBoundingClientRect();\n      const lastPosition = getElementOffset(this.previouslyFocusedElement);\n      const x = lastPosition.left + previouslyDOMRect.width / 2;\n      const y = lastPosition.top + previouslyDOMRect.height / 2;\n      this.transformOrigin = `${x - modalElement.offsetLeft}px ${y - modalElement.offsetTop}px 0px`;\n    }\n  }\n\n  private savePreviouslyFocusedElement(): void {\n    if (this.document) {\n      this.previouslyFocusedElement = this.document.activeElement as HTMLElement;\n    }\n  }\n\n  private trapFocus(): void {\n    if (!this.focusTrap) {\n      this.focusTrap = this.focusTrapFactory.create(this.elementRef.nativeElement);\n    }\n    this.focusTrap.focusInitialElementWhenReady();\n  }\n\n  private restoreFocus(): void {\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.previouslyFocusedElement && typeof this.previouslyFocusedElement.focus === 'function') {\n      this.previouslyFocusedElement.focus();\n    }\n    if (this.focusTrap) {\n      this.focusTrap.destroy();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzModalServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzAddOnModule, NzNoAnimationModule, NzPipesModule } from 'ng-zorro-antd/core';\nimport { NzI18nModule } from 'ng-zorro-antd/i18n';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzModalControlServiceModule } from './nz-modal-control.service.module';\nimport { NzModalFooterDirective } from './nz-modal-footer.directive';\nimport { NzModalComponent } from './nz-modal.component';\nimport { NzModalServiceModule } from './nz-modal.service.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    NzAddOnModule,\n    NzI18nModule,\n    NzButtonModule,\n    NzIconModule,\n    NzPipesModule,\n    NzNoAnimationModule,\n    NzModalServiceModule,\n    NzModalControlServiceModule\n  ],\n  exports: [NzModalComponent, NzModalFooterDirective],\n  declarations: [NzModalComponent, NzModalFooterDirective],\n  entryComponents: [NzModalComponent]\n})\nexport class NzModalModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { warn, IndexableObject } from 'ng-zorro-antd/core';\n\nimport { NzModalControlService } from './nz-modal-control.service';\nimport { NzModalRef } from './nz-modal-ref.class';\nimport { NzModalComponent } from './nz-modal.component';\nimport { NzModalServiceModule } from './nz-modal.service.module';\nimport { ConfirmType, ModalOptions, ModalOptionsForService } from './nz-modal.type';\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n  private modalRef: ComponentRef<NzModalComponent> | null; // Modal ComponentRef, \"null\" means it has been destroyed\n  private overlayRef: OverlayRef;\n\n  constructor(private overlay: Overlay, options: ModalOptionsForService = {}) {\n    this.createModal();\n\n    if (!('nzGetContainer' in options)) {\n      // As we use CDK to create modal in service by force, there is no need to use nzGetContainer\n      options.nzGetContainer = undefined; // Override nzGetContainer's default value to prevent creating another overlay\n    }\n\n    this.changeProps(options);\n    this.modalRef!.instance.setOverlayRef(this.overlayRef);\n    this.modalRef!.instance.open();\n    this.modalRef!.instance.nzAfterClose.subscribe(() => this.destroyModal()); // [NOTE] By default, close equals destroy when using as Service\n  }\n\n  getInstance(): NzModalComponent | null {\n    return this.modalRef && this.modalRef.instance;\n  }\n\n  destroyModal(): void {\n    if (this.modalRef) {\n      this.overlayRef.dispose();\n      this.modalRef = null;\n    }\n  }\n\n  private changeProps(options: ModalOptions): void {\n    if (this.modalRef) {\n      Object.assign(this.modalRef.instance, options); // DANGER: here not limit user's inputs at runtime\n    }\n  }\n\n  // Create component to ApplicationRef\n  private createModal(): void {\n    this.overlayRef = this.overlay.create();\n    this.modalRef = this.overlayRef.attach(new ComponentPortal(NzModalComponent));\n  }\n}\n\n@Injectable({\n  providedIn: NzModalServiceModule\n})\nexport class NzModalService {\n  // Track of the current close modals (we assume invisible is close this time)\n  get openModals(): NzModalRef[] {\n    return this.modalControl.openModals;\n  }\n\n  get afterAllClose(): Observable<void> {\n    return this.modalControl.afterAllClose.asObservable();\n  }\n\n  constructor(private overlay: Overlay, private modalControl: NzModalControlService) {}\n\n  // Closes all of the currently-open dialogs\n  closeAll(): void {\n    this.modalControl.closeAll();\n  }\n\n  create<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    if (typeof options.nzOnCancel !== 'function') {\n      options.nzOnCancel = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    // NOTE: use NzModalComponent as the NzModalRef by now, we may need archive the real NzModalRef object in the future\n    const modalRef = new ModalBuilderForService(this.overlay, options).getInstance()!;\n\n    return modalRef;\n  }\n\n  confirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): NzModalRef<T> {\n    if ('nzFooter' in options) {\n      warn(`The Confirm-Modal doesn't support \"nzFooter\", this property will be ignored.`);\n    }\n    if (!('nzWidth' in options)) {\n      options.nzWidth = 416;\n    }\n    if (!('nzMaskClosable' in options)) {\n      options.nzMaskClosable = false;\n    }\n    if (typeof options.nzOnOk !== 'function') {\n      // NOTE: only support function currently by calling confirm()\n      options.nzOnOk = () => {}; // Leave a empty function to close this modal by default\n    }\n\n    options.nzModalType = 'confirm';\n    options.nzClassName = `ant-modal-confirm ant-modal-confirm-${confirmType} ${options.nzClassName || ''}`;\n    return this.create(options);\n  }\n\n  info<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'info');\n  }\n\n  success<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'success');\n  }\n\n  error<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'error');\n  }\n\n  warning<T>(options: ModalOptionsForService<T> = {}): NzModalRef<T> {\n    return this.simpleConfirm(options, 'warning');\n  }\n\n  private simpleConfirm<T>(options: ModalOptionsForService<T> = {}, confirmType: ConfirmType): NzModalRef<T> {\n    const iconMap: IndexableObject = {\n      info: 'info-circle',\n      success: 'check-circle',\n      error: 'close-circle',\n      warning: 'exclamation-circle'\n    };\n    if (!('nzIconType' in options)) {\n      options.nzIconType = iconMap[confirmType];\n    }\n    if (!('nzCancelText' in options)) {\n      // Remove the Cancel button if the user not specify a Cancel button\n      options.nzCancelText = null;\n    }\n    return this.confirm(options, confirmType);\n  }\n}\n"]}