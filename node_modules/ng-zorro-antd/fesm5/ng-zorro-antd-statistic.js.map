{"version":3,"file":"ng-zorro-antd-statistic.js","sources":["ng://ng-zorro-antd/statistic/nz-statistic-definitions.ts","ng://ng-zorro-antd/statistic/nz-statistic.component.ts","ng://ng-zorro-antd/statistic/nz-countdown.component.ts","ng://ng-zorro-antd/statistic/nz-statistic-number.component.ts","ng://ng-zorro-antd/statistic/nz-statistic.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport type NzStatisticValueType = number | string;\n\nexport const REFRESH_INTERVAL = 1000 / 30;\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, Input, TemplateRef, ViewEncapsulation } from '@angular/core';\nimport { NzStatisticValueType } from './nz-statistic-definitions';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-statistic',\n  exportAs: 'nzStatistic',\n  templateUrl: './nz-statistic.component.html',\n  host: {\n    class: 'ant-statistic'\n  },\n  styles: ['nz-statistic { display: block; }']\n})\nexport class NzStatisticComponent {\n  @Input() nzPrefix: string | TemplateRef<void>;\n  @Input() nzSuffix: string | TemplateRef<void>;\n  @Input() nzTitle: string | TemplateRef<void>;\n  @Input() nzValue: NzStatisticValueType;\n  @Input() nzValueStyle = {};\n  @Input() nzValueTemplate: TemplateRef<{ $implicit: NzStatisticValueType }>;\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { interval, Subscription } from 'rxjs';\n\nimport { REFRESH_INTERVAL } from './nz-statistic-definitions';\nimport { NzStatisticComponent } from './nz-statistic.component';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-countdown',\n  exportAs: 'nzCountdown',\n  templateUrl: './nz-countdown.component.html'\n})\nexport class NzCountdownComponent extends NzStatisticComponent implements OnInit, OnChanges, OnDestroy {\n  /** @override */\n  @Input() nzFormat: string = 'HH:mm:ss';\n  @Output() readonly nzCountdownFinish = new EventEmitter<void>();\n\n  diff: number;\n\n  private target: number;\n  private updater_: Subscription | null;\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private platform: Platform) {\n    super();\n  }\n\n  /** @override */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.nzValue) {\n      this.target = Number(changes.nzValue.currentValue);\n      if (!changes.nzValue.isFirstChange()) {\n        this.syncTimer();\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.syncTimer();\n  }\n\n  ngOnDestroy(): void {\n    this.stopTimer();\n  }\n\n  syncTimer(): void {\n    if (this.target >= Date.now()) {\n      this.startTimer();\n    } else {\n      this.stopTimer();\n    }\n  }\n\n  startTimer(): void {\n    if (this.platform.isBrowser) {\n      this.ngZone.runOutsideAngular(() => {\n        this.stopTimer();\n        this.updater_ = interval(REFRESH_INTERVAL).subscribe(() => {\n          this.updateValue();\n          this.cdr.detectChanges();\n        });\n      });\n    }\n  }\n\n  stopTimer(): void {\n    if (this.updater_) {\n      this.updater_.unsubscribe();\n      this.updater_ = null;\n    }\n  }\n\n  /**\n   * Update time that should be displayed on the screen.\n   */\n  protected updateValue(): void {\n    this.diff = Math.max(this.target - Date.now(), 0);\n\n    if (this.diff === 0) {\n      this.stopTimer();\n      this.nzCountdownFinish.emit();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { getLocaleNumberSymbol, NumberSymbol } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  LOCALE_ID,\n  OnChanges,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { NzStatisticValueType } from './nz-statistic-definitions';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  selector: 'nz-statistic-number',\n  exportAs: 'nzStatisticNumber',\n  templateUrl: './nz-statistic-number.component.html',\n  host: {\n    class: 'ant-statistic-content-value'\n  },\n  styles: ['nz-number { display: inline }']\n})\nexport class NzStatisticNumberComponent implements OnChanges {\n  @Input() nzValue: NzStatisticValueType;\n  @Input() nzValueTemplate: TemplateRef<{ $implicit: NzStatisticValueType }>;\n\n  displayInt = '';\n  displayDecimal = '';\n\n  constructor(@Inject(LOCALE_ID) private locale_id: string) {}\n\n  ngOnChanges(): void {\n    this.formatNumber();\n  }\n\n  private formatNumber(): void {\n    const decimalSeparator: string =\n      typeof this.nzValue === 'number' ? '.' : getLocaleNumberSymbol(this.locale_id, NumberSymbol.Decimal);\n    const value = String(this.nzValue);\n    const [int, decimal] = value.split(decimalSeparator);\n\n    this.displayInt = int;\n    this.displayDecimal = decimal ? `${decimalSeparator}${decimal}` : '';\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzAddOnModule, NzPipesModule } from 'ng-zorro-antd/core';\n\nimport { NzCountdownComponent } from './nz-countdown.component';\nimport { NzStatisticNumberComponent } from './nz-statistic-number.component';\nimport { NzStatisticComponent } from './nz-statistic.component';\n\n@NgModule({\n  imports: [CommonModule, PlatformModule, NzAddOnModule, NzPipesModule],\n  declarations: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent],\n  exports: [NzStatisticComponent, NzCountdownComponent, NzStatisticNumberComponent]\n})\nexport class NzStatisticModule {}\n"],"names":["tslib_1.__extends"],"mappings":"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"}