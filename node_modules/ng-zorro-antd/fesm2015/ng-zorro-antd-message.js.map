{"version":3,"file":"ng-zorro-antd-message.js","sources":["ng://ng-zorro-antd/message/nz-message-base.service.ts","ng://ng-zorro-antd/message/nz-message-config.ts","ng://ng-zorro-antd/message/nz-message-container.component.ts","ng://ng-zorro-antd/message/nz-message.service.module.ts","ng://ng-zorro-antd/message/nz-message.service.ts","ng://ng-zorro-antd/message/nz-message.component.ts","ng://ng-zorro-antd/message/nz-message.module.ts","ng://ng-zorro-antd/message/nz-message.definitions.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ApplicationRef, ComponentFactoryResolver, EmbeddedViewRef, Injector, Type } from '@angular/core';\nimport { warnDeprecation, NzSingletonService } from 'ng-zorro-antd/core';\n\nimport { NzMessageConfigLegacy } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\nlet globalCounter = 0;\n\nexport class NzMessageBaseService<\n  ContainerClass extends NzMessageContainerComponent,\n  MessageData,\n  MessageConfig extends NzMessageConfigLegacy\n> {\n  protected _container: ContainerClass;\n\n  constructor(\n    private nzSingletonService: NzSingletonService,\n    private overlay: Overlay,\n    private containerClass: Type<ContainerClass>,\n    private injector: Injector,\n    private cfr: ComponentFactoryResolver,\n    private appRef: ApplicationRef,\n    private name: string = ''\n  ) {\n    this._container = this.withContainer();\n    this.nzSingletonService.registerSingletonWithKey(this.name, this._container);\n  }\n\n  remove(messageId?: string): void {\n    if (messageId) {\n      this._container.removeMessage(messageId);\n    } else {\n      this._container.removeMessageAll();\n    }\n  }\n\n  createMessage(message: MessageData, options?: NzMessageDataOptions): NzMessageDataFilled {\n    const resultMessage: NzMessageDataFilled = {\n      ...(message as NzMessageData),\n      ...{\n        createdAt: new Date(),\n        messageId: this._generateMessageId(),\n        options\n      }\n    };\n    this._container.createMessage(resultMessage);\n\n    return resultMessage;\n  }\n\n  config(config: MessageConfig): void {\n    warnDeprecation(`'config' of 'NzMessageService' and 'NzNotificationService' is deprecated and will be removed in 9.0.0. Please use 'set' of 'NzConfigService' instead.`);\n\n    this._container.setConfig(config);\n  }\n\n  protected _generateMessageId(): string {\n    return `${this.name}-${globalCounter++}`;\n  }\n\n  // Manually creating container for overlay to avoid multi-checking error, see: https://github.com/NG-ZORRO/ng-zorro-antd/issues/391\n  // NOTE: we never clean up the container component and it's overlay resources, if we should, we need to do it by our own codes.\n  private withContainer(): ContainerClass {\n    const containerInstance = this.nzSingletonService.getSingletonWithKey(this.name);\n\n    if (containerInstance) {\n      return containerInstance as ContainerClass;\n    }\n\n    const factory = this.cfr.resolveComponentFactory(this.containerClass);\n    const componentRef = factory.create(this.injector); // Use root injector\n    componentRef.changeDetectorRef.detectChanges(); // Immediately change detection to avoid multi-checking error\n    this.appRef.attachView(componentRef.hostView); // Load view into app root\n    const overlayPane = this.overlay.create().overlayElement;\n    overlayPane.style.zIndex = '1010'; // Patching: assign the same zIndex of ant-message to it's parent overlay panel, to the ant-message's zindex work.\n    overlayPane.appendChild((componentRef.hostView as EmbeddedViewRef<{}>).rootNodes[0] as HTMLElement);\n\n    return componentRef.instance;\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { InjectionToken } from '@angular/core';\n\n/**\n * @deprecated This interface has been removed to `ng-zorro-antd/core`. Please migrate to that.\n */\nexport interface NzMessageConfigLegacy {\n  nzAnimate?: boolean;\n  nzDuration?: number;\n  nzMaxStack?: number;\n  nzPauseOnHover?: boolean;\n  nzTop?: number | string;\n}\n\nexport const NZ_MESSAGE_DEFAULT_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_DEFAULT_CONFIG');\n\n/**\n * @deprecated 9.0.0 - Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.\n */\nexport const NZ_MESSAGE_CONFIG = new InjectionToken<NzMessageConfigLegacy>('NZ_MESSAGE_CONFIG');\n\nexport const NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER = {\n  provide: NZ_MESSAGE_DEFAULT_CONFIG,\n  useValue: {\n    nzAnimate: true,\n    nzDuration: 3000,\n    nzMaxStack: 7,\n    nzPauseOnHover: true,\n    nzTop: 24\n  }\n};\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnInit,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { toCssPixel, warnDeprecation, NzConfigService } from 'ng-zorro-antd/core';\n\nimport { NzMessageConfigLegacy, NZ_MESSAGE_CONFIG, NZ_MESSAGE_DEFAULT_CONFIG } from './nz-message-config';\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\nconst NZ_CONFIG_COMPONENT_NAME = 'message';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message-container',\n  exportAs: 'nzMessageContainer',\n  preserveWhitespaces: false,\n  templateUrl: './nz-message-container.component.html'\n})\nexport class NzMessageContainerComponent implements OnInit {\n  messages: NzMessageDataFilled[] = [];\n  config: Required<NzMessageConfigLegacy>;\n  top: string | null;\n\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected nzConfigService: NzConfigService,\n    @Optional() @Inject(NZ_MESSAGE_DEFAULT_CONFIG) defaultConfig: NzMessageConfigLegacy,\n    @Optional() @Inject(NZ_MESSAGE_CONFIG) config: NzMessageConfigLegacy\n  ) {\n    if (!!config) {\n      warnDeprecation(\n        `Injection token 'NZ_MESSAGE_CONFIG' is deprecated and will be removed in 9.0.0. Please use 'NzConfigService' instead.`\n      );\n    }\n    this.setConfig({ ...defaultConfig, ...config });\n  }\n\n  ngOnInit(): void {\n    this.subscribeConfigChange();\n  }\n\n  setConfig(config?: NzMessageConfigLegacy): void {\n    this.config = this.mergeMessageConfig(config);\n    this.top = toCssPixel(this.config.nzTop);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Create a new message.\n   * @param message Parsed message configuration.\n   */\n  createMessage(message: NzMessageDataFilled): void {\n    if (this.messages.length >= this.config.nzMaxStack) {\n      this.messages.splice(0, 1);\n    }\n    message.options = this._mergeMessageOptions(message.options);\n    message.onClose = new Subject<boolean>();\n    this.messages.push(message);\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Remove a message by `messageId`.\n   * @param messageId Id of the message to be removed.\n   * @param userAction Whether this is closed by user interaction.\n   */\n  removeMessage(messageId: string, userAction: boolean = false): void {\n    this.messages.some((message, index) => {\n      if (message.messageId === messageId) {\n        this.messages.splice(index, 1);\n        this.cdr.detectChanges();\n        message.onClose!.next(userAction);\n        message.onClose!.complete();\n        return true;\n      }\n      return false;\n    });\n  }\n\n  /**\n   * Remove all messages.\n   */\n  removeMessageAll(): void {\n    this.messages = [];\n    this.cdr.detectChanges();\n  }\n\n  protected subscribeConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME).subscribe(() => this.setConfig());\n  }\n\n  protected mergeMessageConfig(config?: NzMessageConfigLegacy): Required<NzMessageConfigLegacy> {\n    return {\n      ...this.config,\n      ...config,\n      ...this.nzConfigService.getConfigForComponent(NZ_CONFIG_COMPONENT_NAME)\n    };\n  }\n\n  /**\n   * Merge default options and custom message options\n   * @param options\n   */\n  protected _mergeMessageOptions(options?: NzMessageDataOptions): NzMessageDataOptions {\n    const defaultOptions: NzMessageDataOptions = {\n      nzDuration: this.config.nzDuration,\n      nzAnimate: this.config.nzAnimate,\n      nzPauseOnHover: this.config.nzPauseOnHover\n    };\n    return { ...defaultOptions, ...options };\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NgModule } from '@angular/core';\n\n@NgModule()\nexport class NzMessageServiceModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Overlay } from '@angular/cdk/overlay';\nimport { ApplicationRef, ComponentFactoryResolver, Injectable, Injector, TemplateRef } from '@angular/core';\nimport { NzSingletonService } from 'ng-zorro-antd/core';\n\nimport { NzMessageBaseService } from './nz-message-base.service';\nimport { NzMessageConfigLegacy } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageData, NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\nimport { NzMessageServiceModule } from './nz-message.service.module';\n\n@Injectable({\n  providedIn: NzMessageServiceModule\n})\nexport class NzMessageService extends NzMessageBaseService<\n  NzMessageContainerComponent,\n  NzMessageData,\n  NzMessageConfigLegacy\n> {\n  constructor(\n    nzSingletonService: NzSingletonService,\n    overlay: Overlay,\n    injector: Injector,\n    cfr: ComponentFactoryResolver,\n    appRef: ApplicationRef\n  ) {\n    super(nzSingletonService, overlay, NzMessageContainerComponent, injector, cfr, appRef, 'message');\n  }\n\n  // Shortcut methods\n  success(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'success', content }, options);\n  }\n\n  error(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'error', content }, options);\n  }\n\n  info(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'info', content }, options);\n  }\n\n  warning(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'warning', content }, options);\n  }\n\n  loading(content: string | TemplateRef<void>, options?: NzMessageDataOptions): NzMessageDataFilled {\n    return this.createMessage({ type: 'loading', content }, options);\n  }\n\n  create(\n    type: 'success' | 'info' | 'warning' | 'error' | 'loading' | string,\n    content: string | TemplateRef<void>,\n    options?: NzMessageDataOptions\n  ): NzMessageDataFilled {\n    return this.createMessage({ type, content }, options);\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { moveUpMotion } from 'ng-zorro-antd/core';\n\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageDataFilled, NzMessageDataOptions } from './nz-message.definitions';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-message',\n  exportAs: 'nzMessage',\n  preserveWhitespaces: false,\n  animations: [moveUpMotion],\n  templateUrl: './nz-message.component.html'\n})\nexport class NzMessageComponent implements OnInit, OnDestroy {\n  @Input() nzMessage: NzMessageDataFilled;\n  @Input() nzIndex: number;\n\n  protected _options: Required<NzMessageDataOptions>;\n\n  private _autoErase: boolean; // Whether to set a timeout to destroy itself.\n  private _eraseTimer: number | null = null;\n  private _eraseTimingStart: number;\n  private _eraseTTL: number; // Time to live.\n\n  constructor(private _messageContainer: NzMessageContainerComponent, protected cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    // `NzMessageContainer` does its job so all properties cannot be undefined.\n    this._options = this.nzMessage.options as Required<NzMessageDataOptions>;\n\n    if (this._options.nzAnimate) {\n      this.nzMessage.state = 'enter';\n    }\n\n    this._autoErase = this._options.nzDuration > 0;\n\n    if (this._autoErase) {\n      this._initErase();\n      this._startEraseTimeout();\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this._autoErase) {\n      this._clearEraseTimeout();\n    }\n  }\n\n  onEnter(): void {\n    if (this._autoErase && this._options.nzPauseOnHover) {\n      this._clearEraseTimeout();\n      this._updateTTL();\n    }\n  }\n\n  onLeave(): void {\n    if (this._autoErase && this._options.nzPauseOnHover) {\n      this._startEraseTimeout();\n    }\n  }\n\n  // Remove self\n  protected _destroy(userAction: boolean = false): void {\n    if (this._options.nzAnimate) {\n      this.nzMessage.state = 'leave';\n      this.cdr.detectChanges();\n      setTimeout(() => this._messageContainer.removeMessage(this.nzMessage.messageId, userAction), 200);\n    } else {\n      this._messageContainer.removeMessage(this.nzMessage.messageId, userAction);\n    }\n  }\n\n  private _initErase(): void {\n    this._eraseTTL = this._options.nzDuration;\n    this._eraseTimingStart = Date.now();\n  }\n\n  private _updateTTL(): void {\n    if (this._autoErase) {\n      this._eraseTTL -= Date.now() - this._eraseTimingStart;\n    }\n  }\n\n  private _startEraseTimeout(): void {\n    if (this._eraseTTL > 0) {\n      this._clearEraseTimeout();\n      this._eraseTimer = setTimeout(() => this._destroy(), this._eraseTTL);\n      this._eraseTimingStart = Date.now();\n    } else {\n      this._destroy();\n    }\n  }\n\n  private _clearEraseTimeout(): void {\n    if (this._eraseTimer !== null) {\n      clearTimeout(this._eraseTimer);\n      this._eraseTimer = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzAddOnModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER } from './nz-message-config';\nimport { NzMessageContainerComponent } from './nz-message-container.component';\nimport { NzMessageComponent } from './nz-message.component';\nimport { NzMessageServiceModule } from './nz-message.service.module';\n\n@NgModule({\n  imports: [CommonModule, OverlayModule, NzIconModule, NzAddOnModule, NzMessageServiceModule],\n  declarations: [NzMessageContainerComponent, NzMessageComponent],\n  providers: [NZ_MESSAGE_DEFAULT_CONFIG_PROVIDER],\n  entryComponents: [NzMessageContainerComponent]\n})\nexport class NzMessageModule {}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nexport type NzMessageType = 'success' | 'info' | 'warning' | 'error' | 'loading';\n\nexport interface NzMessageDataOptions {\n  nzDuration?: number;\n  nzAnimate?: boolean;\n  nzPauseOnHover?: boolean;\n}\n\n/**\n * Message data for terminal users.\n */\nexport interface NzMessageData {\n  type?: NzMessageType | string;\n  content?: string | TemplateRef<void>;\n}\n\n/**\n * Filled version of NzMessageData (includes more private properties).\n */\nexport interface NzMessageDataFilled extends NzMessageData {\n  messageId: string;\n  createdAt: Date;\n\n  options?: NzMessageDataOptions;\n  state?: 'enter' | 'leave';\n  onClose?: Subject<boolean>;\n}\n"],"names":[],"mappings":"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"}