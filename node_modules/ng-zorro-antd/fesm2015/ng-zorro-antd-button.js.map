{"version":3,"file":"ng-zorro-antd-button.js","sources":["ng://ng-zorro-antd/button/nz-button.component.ts","ng://ng-zorro-antd/button/nz-button-group.component.ts","ng://ng-zorro-antd/button/nz-button.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ContentObserver } from '@angular/cdk/observers';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  Renderer2,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n  ViewRef\n} from '@angular/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\nimport {\n  findFirstNotEmptyNode,\n  findLastNotEmptyNode,\n  isEmpty,\n  InputBoolean,\n  NzConfigService,\n  NzSizeLDSType,\n  NzSizeMap,\n  NzUpdateHostClassService,\n  NzWaveConfig,\n  NzWaveDirective,\n  NZ_WAVE_GLOBAL_CONFIG,\n  WithConfig\n} from 'ng-zorro-antd/core';\nimport { NzIconDirective } from 'ng-zorro-antd/icon';\nimport { Subject } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nexport type NzButtonType = 'primary' | 'dashed' | 'danger' | 'default' | 'link';\nexport type NzButtonShape = 'circle' | 'round' | null;\n\nconst NZ_CONFIG_COMPONENT_NAME = 'button';\n\n@Component({\n  selector: '[nz-button]',\n  exportAs: 'nzButton',\n  providers: [NzUpdateHostClassService],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: './nz-button.component.html'\n})\nexport class NzButtonComponent implements AfterContentInit, OnInit, OnDestroy, OnChanges {\n  @ViewChild('contentElement', { static: true }) contentElement: ElementRef;\n  @ContentChildren(NzIconDirective, { read: ElementRef }) listOfIconElement: QueryList<ElementRef>;\n  @HostBinding('attr.nz-wave') nzWave = new NzWaveDirective(\n    this.ngZone,\n    this.elementRef,\n    this.waveConfig,\n    this.animationType\n  );\n\n  @Input() @InputBoolean() nzBlock: boolean = false;\n  @Input() @InputBoolean() nzGhost: boolean = false;\n  @Input() @InputBoolean() nzSearch: boolean = false;\n  @Input() @InputBoolean() nzLoading: boolean = false;\n  @Input() nzType: NzButtonType = 'default';\n  @Input() nzShape: NzButtonShape = null;\n  @Input() @WithConfig(NZ_CONFIG_COMPONENT_NAME, 'default') nzSize: NzSizeLDSType;\n\n  readonly el: HTMLElement = this.elementRef.nativeElement;\n  isInDropdown = false;\n  private iconElement: HTMLElement;\n  private iconOnly = false;\n  private destroy$ = new Subject<void>();\n\n  /** temp solution since no method add classMap to host https://github.com/angular/angular/issues/7289 */\n  setClassMap(): void {\n    const prefixCls = 'ant-btn';\n    const sizeMap: NzSizeMap = { large: 'lg', small: 'sm' };\n    this.nzUpdateHostClassService.updateHostClass(this.el, {\n      [`${prefixCls}-${this.nzType}`]: this.nzType,\n      [`${prefixCls}-${this.nzShape}`]: this.nzShape,\n      [`${prefixCls}-${sizeMap[this.nzSize]}`]: sizeMap[this.nzSize],\n      [`${prefixCls}-loading`]: this.nzLoading,\n      [`${prefixCls}-icon-only`]: this.iconOnly && !this.nzSearch && !this.isInDropdown,\n      [`${prefixCls}-background-ghost`]: this.nzGhost,\n      [`${prefixCls}-block`]: this.nzBlock,\n      [`ant-input-search-button`]: this.nzSearch\n    });\n  }\n\n  updateIconDisplay(value: boolean): void {\n    if (this.iconElement) {\n      this.renderer.setStyle(this.iconElement, 'display', value ? 'none' : 'inline-block');\n    }\n  }\n\n  checkContent(): void {\n    const hasIcon = this.listOfIconElement && this.listOfIconElement.length;\n    if (hasIcon) {\n      this.moveIcon();\n    }\n    this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\n    /** https://github.com/angular/angular/issues/12530 **/\n    if (isEmpty(this.contentElement.nativeElement)) {\n      this.renderer.setStyle(this.contentElement.nativeElement, 'display', 'none');\n      this.iconOnly = !!hasIcon;\n    } else {\n      this.renderer.removeStyle(this.contentElement.nativeElement, 'display');\n      this.iconOnly = false;\n    }\n    this.setClassMap();\n    this.updateIconDisplay(this.nzLoading);\n    if (!(this.cdr as ViewRef).destroyed) {\n      this.cdr.detectChanges();\n    }\n  }\n\n  moveIcon(): void {\n    if (this.listOfIconElement && this.listOfIconElement.length) {\n      const firstChildElement = findFirstNotEmptyNode(this.contentElement.nativeElement);\n      const lastChildElement = findLastNotEmptyNode(this.contentElement.nativeElement);\n      if (firstChildElement && firstChildElement === this.listOfIconElement.first.nativeElement) {\n        this.renderer.insertBefore(this.el, firstChildElement, this.contentElement.nativeElement);\n        this.iconElement = firstChildElement as HTMLElement;\n      } else if (lastChildElement && lastChildElement === this.listOfIconElement.last.nativeElement) {\n        this.renderer.appendChild(this.el, lastChildElement);\n      }\n    }\n  }\n\n  constructor(\n    private elementRef: ElementRef,\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private contentObserver: ContentObserver,\n    private nzUpdateHostClassService: NzUpdateHostClassService,\n    private ngZone: NgZone,\n    public nzConfigService: NzConfigService,\n    @Optional() @Inject(NZ_WAVE_GLOBAL_CONFIG) private waveConfig: NzWaveConfig,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) private animationType: string\n  ) {\n    this.renderer.addClass(elementRef.nativeElement, 'ant-btn');\n    this.nzConfigService\n      .getConfigChangeEventForComponent(NZ_CONFIG_COMPONENT_NAME)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.setClassMap();\n        this.cdr.markForCheck();\n      });\n  }\n\n  ngAfterContentInit(): void {\n    this.contentObserver\n      .observe(this.contentElement)\n      .pipe(\n        startWith(true),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        // https://github.com/NG-ZORRO/ng-zorro-antd/issues/3079\n        Promise.resolve().then(() => this.checkContent());\n      });\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n    this.nzWave.ngOnInit();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.nzWave.ngOnDestroy();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      changes.nzBlock ||\n      changes.nzGhost ||\n      changes.nzSearch ||\n      changes.nzType ||\n      changes.nzShape ||\n      changes.nzSize ||\n      changes.nzLoading\n    ) {\n      this.setClassMap();\n    }\n    if (changes.nzLoading) {\n      this.updateIconDisplay(this.nzLoading);\n    }\n    if (changes.nzType && changes.nzType.currentValue === 'link') {\n      this.nzWave.disable();\n    } else {\n      this.nzWave.enable();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { NzSizeLDSType, NzUpdateHostClassService } from 'ng-zorro-antd/core';\n\n@Component({\n  selector: 'nz-button-group',\n  exportAs: 'nzButtonGroup',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  providers: [NzUpdateHostClassService],\n  templateUrl: './nz-button-group.component.html'\n})\nexport class NzButtonGroupComponent implements OnInit {\n  private _size: NzSizeLDSType;\n  isInDropdown = false;\n\n  @Input()\n  get nzSize(): NzSizeLDSType {\n    return this._size;\n  }\n\n  set nzSize(value: NzSizeLDSType) {\n    this._size = value;\n    this.setClassMap();\n  }\n\n  constructor(private nzUpdateHostClassService: NzUpdateHostClassService, private elementRef: ElementRef) {}\n\n  setClassMap(): void {\n    const prefixCls = 'ant-btn-group';\n    const classMap = {\n      [prefixCls]: true,\n      [`ant-dropdown-button`]: this.isInDropdown,\n      [`${prefixCls}-lg`]: this.nzSize === 'large',\n      [`${prefixCls}-sm`]: this.nzSize === 'small'\n    };\n    this.nzUpdateHostClassService.updateHostClass(this.elementRef.nativeElement, classMap);\n  }\n\n  ngOnInit(): void {\n    this.setClassMap();\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { NzWaveModule } from 'ng-zorro-antd/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\n\nimport { NzButtonGroupComponent } from './nz-button-group.component';\nimport { NzButtonComponent } from './nz-button.component';\n\n@NgModule({\n  declarations: [NzButtonComponent, NzButtonGroupComponent],\n  exports: [NzButtonComponent, NzButtonGroupComponent],\n  imports: [CommonModule, ObserversModule, NzWaveModule, NzIconModule]\n})\nexport class NzButtonModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}