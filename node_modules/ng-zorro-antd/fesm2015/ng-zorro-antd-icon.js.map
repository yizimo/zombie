{"version":3,"file":"ng-zorro-antd-icon.js","sources":["ng://ng-zorro-antd/icon/nz-icon.service.ts","ng://ng-zorro-antd/icon/nz-icon.directive.ts","ng://ng-zorro-antd/icon/nz-icon.module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { HttpBackend } from '@angular/common/http';\nimport { Inject, Injectable, InjectionToken, Optional, RendererFactory2 } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { IconDefinition, IconService } from '@ant-design/icons-angular';\nimport {\n  BarsOutline,\n  CalendarOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleFill,\n  CloseCircleOutline,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  UpOutline\n} from '@ant-design/icons-angular/icons';\nimport { warn, warnDeprecation, IconConfig, NzConfigService } from 'ng-zorro-antd/core';\nimport { Subject } from 'rxjs';\n\nexport interface NzIconfontOption {\n  scriptUrl: string;\n}\n\nexport const NZ_ICONS = new InjectionToken('nz_icons');\nexport const NZ_ICON_DEFAULT_TWOTONE_COLOR = new InjectionToken('nz_icon_default_twotone_color');\nexport const DEFAULT_TWOTONE_COLOR = '#1890ff';\nexport const NZ_ICONS_USED_BY_ZORRO: IconDefinition[] = [\n  BarsOutline,\n  CalendarOutline,\n  CaretUpFill,\n  CaretUpOutline,\n  CaretDownFill,\n  CaretDownOutline,\n  CheckCircleFill,\n  CheckCircleOutline,\n  CheckOutline,\n  ClockCircleOutline,\n  CloseCircleOutline,\n  CloseCircleFill,\n  CloseOutline,\n  CopyOutline,\n  DoubleLeftOutline,\n  DoubleRightOutline,\n  DownOutline,\n  EditOutline,\n  EllipsisOutline,\n  ExclamationCircleFill,\n  ExclamationCircleOutline,\n  EyeOutline,\n  FileFill,\n  FileOutline,\n  FilterFill,\n  InfoCircleFill,\n  InfoCircleOutline,\n  LeftOutline,\n  LoadingOutline,\n  PaperClipOutline,\n  QuestionCircleOutline,\n  RightOutline,\n  StarFill,\n  SearchOutline,\n  StarFill,\n  UploadOutline,\n  UpOutline\n];\n\n/**\n * It should be a global singleton, otherwise registered icons could not be found.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NzIconService extends IconService {\n  configUpdated$ = new Subject<void>();\n\n  private iconfontCache = new Set<string>();\n\n  warnAPI(type: 'old' | 'cross' | 'vertical'): void {\n    if (type === 'old') {\n      warnDeprecation(\n        `'<i class=\"anticon\"></i>' would be deprecated in 9.0.0. Please use '<i nz-icon nzType=\"\"></i>' API. Please refer https://ng.ant.design/components/icon/en.`\n      );\n    }\n    if (type === 'cross') {\n      warnDeprecation(`'cross' icon is replaced by 'close' icon. This auto correction would be removed in 9.0.0.`);\n    }\n    if (type === 'vertical') {\n      warnDeprecation(`'verticle' is misspelled. Please use 'vertical'. This misspell would be fixed in 9.0.0.`);\n    }\n  }\n\n  normalizeSvgElement(svg: SVGElement): void {\n    if (!svg.getAttribute('viewBox')) {\n      this._renderer.setAttribute(svg, 'viewBox', '0 0 1024 1024');\n    }\n    if (!svg.getAttribute('width') || !svg.getAttribute('height')) {\n      this._renderer.setAttribute(svg, 'width', '1em');\n      this._renderer.setAttribute(svg, 'height', '1em');\n    }\n    if (!svg.getAttribute('fill')) {\n      this._renderer.setAttribute(svg, 'fill', 'currentColor');\n    }\n  }\n\n  fetchFromIconfont(opt: NzIconfontOption): void {\n    const { scriptUrl } = opt;\n    if (this._document && !this.iconfontCache.has(scriptUrl)) {\n      const script = this._renderer.createElement('script');\n      this._renderer.setAttribute(script, 'src', scriptUrl);\n      this._renderer.setAttribute(script, 'data-namespace', scriptUrl.replace(/^(https?|http):/g, ''));\n      this._renderer.appendChild(this._document.body, script);\n      this.iconfontCache.add(scriptUrl);\n    }\n  }\n\n  createIconfontIcon(type: string): SVGElement {\n    return this._createSVGElementFromString(`<svg><use xlink:href=\"${type}\"></svg>`);\n  }\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    sanitizer: DomSanitizer,\n    protected nzConfigService: NzConfigService,\n    @Optional() handler: HttpBackend,\n    // tslint:disable-next-line:no-any\n    @Optional() @Inject(DOCUMENT) _document: any,\n    @Optional() @Inject(NZ_ICONS) icons?: IconDefinition[],\n    /**\n     * @deprecated\n     * @inner\n     */\n    @Optional() @Inject(NZ_ICON_DEFAULT_TWOTONE_COLOR) private legacyDefaultTwotoneColor?: string\n  ) {\n    super(rendererFactory, handler, _document, sanitizer);\n\n    this.onConfigChange();\n\n    this.addIcon(...NZ_ICONS_USED_BY_ZORRO, ...(icons || []));\n\n    if (legacyDefaultTwotoneColor) {\n      warnDeprecation(\n        `'NZ_ICON_DEFAULT_TWOTONE_COLOR' is deprecated and will be removed in 9.0.0. Please use 'NZ_CONFIG' instead!`\n      );\n    }\n    this.configDefaultTwotoneColor();\n\n    this.configDefaultTheme();\n  }\n\n  private onConfigChange(): void {\n    this.nzConfigService.getConfigChangeEventForComponent('icon').subscribe(() => {\n      this.configDefaultTwotoneColor();\n      this.configDefaultTheme();\n      this.configUpdated$.next();\n    });\n  }\n\n  private configDefaultTheme(): void {\n    const iconConfig = this.getConfig();\n    this.defaultTheme = iconConfig.nzTheme || 'outline';\n  }\n\n  private configDefaultTwotoneColor(): void {\n    const iconConfig = this.getConfig();\n    const defaultTwotoneColor = iconConfig.nzTwotoneColor || this.legacyDefaultTwotoneColor;\n\n    let primaryColor = DEFAULT_TWOTONE_COLOR;\n\n    if (defaultTwotoneColor) {\n      if (defaultTwotoneColor.startsWith('#')) {\n        primaryColor = defaultTwotoneColor;\n      } else {\n        warn('Twotone color must be a hex color!');\n      }\n    }\n\n    this.twoToneColor = { primaryColor };\n  }\n\n  private getConfig(): IconConfig {\n    return this.nzConfigService.getConfigForComponent('icon') || {};\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Platform } from '@angular/cdk/platform';\nimport {\n  AfterContentChecked,\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges\n} from '@angular/core';\nimport { IconDirective, ThemeType } from '@ant-design/icons-angular';\nimport { warnDeprecation, InputBoolean } from 'ng-zorro-antd/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NzIconService } from './nz-icon.service';\n\nconst iconTypeRE = /^anticon\\-\\w/;\n\nconst getIconTypeClass = (className: string): { name: string; index: number } | undefined => {\n  if (!className) {\n    return undefined;\n  } else {\n    const classArr = className.split(/\\s/);\n    const index = classArr.findIndex(cls => cls !== 'anticon' && cls !== 'anticon-spin' && !!cls.match(iconTypeRE));\n    return index === -1 ? undefined : { name: classArr[index], index };\n  }\n};\n\nconst normalizeType = (rawType: string): { type: string; crossError: boolean; verticalError: boolean } => {\n  const ret = { type: rawType, crossError: false, verticalError: false };\n  ret.type = rawType ? rawType.replace('anticon-', '') : '';\n  if (ret.type.includes('verticle')) {\n    ret.type = 'up';\n    ret.verticalError = true;\n  }\n  if (ret.type.startsWith('cross')) {\n    ret.type = 'close';\n    ret.crossError = true;\n  }\n  return ret;\n};\n\n/**\n * This directive extends IconDirective to provide:\n *\n * - IconFont support\n * - spinning\n * - old API compatibility\n *\n * @break-changes\n *\n * - old API compatibility, icon class names would not be supported.\n * - properties that not started with `nz`.\n */\n@Directive({\n  selector: 'i.anticon, [nz-icon]',\n  exportAs: 'nzIcon'\n})\nexport class NzIconDirective extends IconDirective implements OnInit, OnChanges, OnDestroy, AfterContentChecked {\n  @Input()\n  @InputBoolean()\n  set nzSpin(value: boolean) {\n    this.spin = value;\n  }\n\n  @Input() nzRotate: number = 0;\n\n  @Input() set nzType(value: string) {\n    this.type = value;\n  }\n\n  @Input() set nzTheme(value: ThemeType) {\n    this.theme = value;\n  }\n\n  @Input() set nzTwotoneColor(value: string) {\n    this.twoToneColor = value;\n  }\n\n  @Input() set nzIconfont(value: string) {\n    this.iconfont = value;\n  }\n\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\n  @Input() spin = false;\n\n  /** @deprecated 8.0.0 avoid exposing low layer API. */\n  @Input() iconfont: string;\n\n  @Input()\n  set type(value: string) {\n    if (value && value.startsWith('anticon')) {\n      const rawClass = getIconTypeClass(value);\n      const type = rawClass ? normalizeType(rawClass.name).type : '';\n      if (type && this.type !== type) {\n        this._type = type;\n      }\n    } else {\n      this._type = value;\n    }\n  }\n\n  get type(): string {\n    return this._type;\n  }\n\n  private classNameObserver: MutationObserver;\n  private el = this.elementRef.nativeElement;\n  private destroy$ = new Subject<void>();\n  private _type: string;\n\n  /**\n   * Replacement of `changeIcon` for more modifications.\n   * @param oldAPI\n   */\n  private changeIcon2(oldAPI: boolean = false): void {\n    if (!oldAPI) {\n      this.setClassName();\n    }\n    this._changeIcon().then(svg => {\n      this.setSVGData(svg);\n      if (!oldAPI && svg) {\n        this.handleSpin(svg);\n        this.handleRotate(svg);\n      }\n    });\n  }\n\n  private classChangeHandler(className: string): void {\n    const ret = getIconTypeClass(className);\n    if (ret) {\n      const { type, crossError, verticalError } = normalizeType(ret.name);\n      if (crossError) {\n        this.iconService.warnAPI('cross');\n      }\n      if (verticalError) {\n        this.iconService.warnAPI('vertical');\n      }\n      if (this.type !== type) {\n        this._type = type;\n        this.changeIcon2(true);\n      }\n    }\n  }\n\n  private handleSpin(svg: SVGElement): void {\n    if ((this.spin || this.type === 'loading') && !this.elementRef.nativeElement.classList.contains('anticon-spin')) {\n      this.renderer.addClass(svg, 'anticon-spin');\n    } else {\n      this.renderer.removeClass(svg, 'anticon-spin');\n    }\n  }\n\n  private handleRotate(svg: SVGElement): void {\n    if (this.nzRotate) {\n      this.renderer.setAttribute(svg, 'style', `transform: rotate(${this.nzRotate}deg)`);\n    } else {\n      this.renderer.removeAttribute(svg, 'style');\n    }\n  }\n\n  private setClassName(): void {\n    if (typeof this.type === 'string') {\n      const iconClassNameArr = this.el.className.split(/\\s/);\n      const ret = getIconTypeClass(this.el.className);\n      if (ret) {\n        iconClassNameArr.splice(ret.index, 1, `anticon-${this.type}`);\n        this.renderer.setAttribute(this.el, 'class', iconClassNameArr.join(' '));\n      } else {\n        this.renderer.addClass(this.el, `anticon-${this.type}`);\n      }\n    }\n  }\n\n  private setSVGData(svg: SVGElement | null): void {\n    if (typeof this.type === 'string' && svg) {\n      this.renderer.setAttribute(svg, 'data-icon', this.type);\n      this.renderer.setAttribute(svg, 'aria-hidden', 'true');\n    }\n  }\n\n  constructor(\n    public iconService: NzIconService,\n    public elementRef: ElementRef,\n    public renderer: Renderer2,\n    private platform: Platform\n  ) {\n    super(iconService, elementRef, renderer);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { type, nzType, nzTwotoneColor, twoToneColor, spin, nzSpin, theme, nzTheme, nzRotate } = changes;\n\n    if (type && !nzType) {\n      warnDeprecation(\n        `APIs for Icon without 'nz' prefix are deprecated and will be removed in 9.0.0! Please check icons with this type: '${type.currentValue}'.`\n      );\n    }\n\n    if (type || nzType || nzTwotoneColor || twoToneColor || spin || nzSpin || theme || nzTheme) {\n      this.changeIcon2();\n    } else if (nzRotate) {\n      this.handleRotate(this.el.firstChild);\n    } else {\n      this._setSVGElement(this.iconService.createIconfontIcon(`#${this.iconfont}`));\n    }\n\n    if (type && !nzType) {\n      warnDeprecation(\n        `APIs for Icon without 'nz' prefix are deprecated and will be removed in 9.0.0! Please check icons with this type: '${this.type}'.`\n      );\n    }\n  }\n\n  ngOnInit(): void {\n    // If `this.type` is not specified and `classList` contains `anticon`, it should be an icon using old API.\n    if (!this.type && this.el.classList.contains('anticon')) {\n      this.iconService.warnAPI('old');\n      // Get `type` from `className`. If not, initial rendering would be missed.\n      this.classChangeHandler(this.el.className);\n      if (this.platform.isBrowser) {\n        // Add `class` mutation observer.\n        this.classNameObserver = new MutationObserver((mutations: MutationRecord[]) => {\n          mutations\n            .filter((mutation: MutationRecord) => mutation.attributeName === 'class')\n            .forEach((mutation: MutationRecord) => this.classChangeHandler((mutation.target as HTMLElement).className));\n        });\n        this.classNameObserver.observe(this.el, { attributes: true });\n      }\n    }\n    // If `classList` does not contain `anticon`, add it before other class names.\n    if (!this.el.classList.contains('anticon')) {\n      this.renderer.setAttribute(this.el, 'class', `anticon ${this.el.className}`.trim());\n    }\n\n    this.iconService.configUpdated$\n      .asObservable()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        if (this.type) {\n          this.changeIcon2();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.classNameObserver) {\n      this.classNameObserver.disconnect();\n    }\n\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * If custom content is provided, try to normalize SVG elements.\n   */\n  ngAfterContentChecked(): void {\n    const children = this.el.children;\n    let length = children.length;\n    if (!this.type && children.length) {\n      while (length--) {\n        const child = children[length];\n        if (child.tagName.toLowerCase() === 'svg') {\n          this.iconService.normalizeSvgElement(child as SVGElement);\n        }\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright Alibaba.com All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { NgModule } from '@angular/core';\n\nimport { NzIconDirective } from './nz-icon.directive';\n\n@NgModule({\n  exports: [NzIconDirective],\n  declarations: [NzIconDirective],\n  imports: [PlatformModule]\n})\nexport class NzIconModule {}\n"],"names":["tslib_1.__decorate"],"mappings":"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"}